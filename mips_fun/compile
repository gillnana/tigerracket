#!/bin/ksh -e

function compile {
	# Write this function according to however your Tiger compiler works
	# $1 is the Tiger input file
	# $2 is the file where the compiled MIPS assembly should be written

	# Examples:
	/path/to/your/tiger/compiler "$1" "$2"
	#/path/to/your/tiger/compiler -o "$2" "$1"
}

# Change this path to your libtiger implementation
LIBTIGER=/path/to/your/libtiger.o
MIPSRT=/course/cs195r/lib/mips-rt/mips-rt.a



# *** No user-serviceable parts below this line ***

USAGE="$0 [-o outfile] infile"
outfile=a.out
while getopts :o: CH
do
	if [[ $CH == "o" ]]
	then
		outfile=$OPTARG
	else
		print -u2 "$0: Unknown option: $OPTARG"
		print -u2 "$USAGE"
		exit 2
	fi
done

shift $((OPTIND - 1))

if (( $# != 1 ))
then
	print -u2 "$USAGE"
	exit 2
fi

infile=$1

if [[ ! -f $infile ]]
then
	print -u2 "$infile: No such file"
	exit 1
fi

malfile=$(mktemp -t mips.XXXXXX)
trap "rm -f $malfile" EXIT
ofile=$(mktemp -t mips.XXXXXX)
trap "rm -f $malfile $ofile" EXIT

compile "$infile" "$malfile"
mips-linux-as -O0 -mips1 -o "$ofile" "$malfile"
mips-linux-ld -o "$outfile" "$MIPSRT" "$LIBTIGER" "$ofile"
